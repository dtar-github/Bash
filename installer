install() {
printf "\n\n$2 \e[1;36m$1\e[0m...\n"
name=$1
if [ "${name: -5}" == ".html" ]
then
curl --progress-bar -o $1 "https://raw.githubusercontent.com/dtar-github/dtar-github.github.io/refs/heads/main/$1"
else
curl --progress-bar -o $1 "https://raw.githubusercontent.com/dtar-github/bash/refs/heads/main/$1"
chmod +x $1
fi
if [ "$(cat $1)" == "" ]
then
rm $1
printf "\e[31mFailed to download.\e[0m\nTry checking your internet connection\n\n"
exit
else
printf "\e[32mDone!\e[0m"
fi
}
dtar_functions() {
if [ "$1" == "Updating" ]
then
printf "\nPlease update \e[1;36mdtar_functions\e[0m.\n\nPress \e[1mEnter\e[0m to update\e[0m"
else
printf "\nPlease install \e[1;36mdtar_functions\e[0m to proceed.\n\nPress \e[1mEnter\e[0m to install \e[1;36mdtar_functions\e[0m in the following directory:\n$(dirname "$(realpath "$0")")"
fi
read
install "dtar_functions" "$1"
read
printf "\n\n"
}
tput smcup
cd "$(dirname "$0")"
stty -echo
curl "https://raw.githubusercontent.com/dtar-github/bash/refs/heads/main/list.txt" > list.txt
while IFS= read -r line
do
installations+=("$line")
done < list.txt
if [[ "${installations[@]}" == "" ]]
then
installations=("Toe-Tac-Tic" "2048" "Wordle" "Spaceship_Battle.html")
fi
rm list.txt
clear
printf "Welcome to the \e[1;31md\e[33mt\e[32ma\e[34mr \e[0;1mInstaller\e[0m!\n\n"
if [ "$(uname)" == "Darwin" ]
then
if [ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" != "Dark" ]
then
echo "This interface is made for dark mode!
Please change to dark mode for a better experience."
fi
else
echo "Warning! This script was made for MacOS zsh.
It has not been tested on other operating systems."
fi
if [ ! -f "dtar_functions" ]
then
dtar_functions "Installing"
else
if [ "$(cat 'dtar_functions')" != "$(curl -s 'https://raw.githubusercontent.com/dtar-github/bash/refs/heads/main/dtar_functions')" ]
then
dtar_functions "Updating"
else
read
fi
fi
source "dtar_functions"
files=()
for i in ${installations[@]}
do
if [ ! -f $i ]
then
files+=("$i")
fi
done
if [ ${#files[@]} -eq 0 ]
then
printf "Would you like to check if files are up to date? (Y/N)"
read -n1 key
case $key in
[Yy])
files="none"
for i in ${installations[@]}
do
if [ "${i: -5}" == ".html" ]
then
name="https://raw.githubusercontent.com/dtar-github/dtar-github.github.io/refs/heads/main/$i"
else
name="https://raw.githubusercontent.com/dtar-github/bash/refs/heads/main/$i"
fi
if [ "$(curl -s "$name")" != "$(cat $i)" ]
then
files=$i
clear
printf "\e[1;36m$i\e[0m is not up to date.\nWould you like to update \e[1;36m$i\e[0m? (Y/N)"
read -n1 output
case $output in
[Yy])
install $i "Updating"
read
esac
fi
done
if [ "$files" == "none" ]
then
echo
read -p "All files are up to date!"
fi
esac
fi
while true
do
files=()
for i in ${installations[@]}
do
if [ ! -f $i ]
then
files+=("$i")
fi
done
if [ ${#files[@]} -eq 0 ]
then
menu "Choose a file to open!" installations[@]
open ${installations[$output-1]}
else
output=0
menu "Choose file to install:" files[@]
tput cup ${#files[@]} 0
install ${files[$output-1]} "Installing"
printf "\n\nWould you like to open \e[1;36m${files[$output-1]}\e[0m? (Y/N)\n"
read -n1 key
case $key in
[Yy])
open ${files[$output-1]}
;;*)
tput cup $((${#files[@]}+8)) 0
printf "Thank You for downloading \e[1;36m${files[$output-1]}\e[0m"
read
esac
fi
done